//====================================================================/
//　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　/
// artisoc                                                            /
//                                                                    /
//====================================================================/

Version = 4.0;



//-------------------------------------------------------
// Component Tree
//-------------------------------------------------------
UNIVERSE {
    Space map(0,0),Square_2D(160, 300, !Loop, North, 1, !Map_3D){
        AgtType robot(0, 0)[0] {
            Dim ID(0, 0) As Integer = (0);
            Dim X(0, 0) As Double = (0.0);
            Dim Y(0, 0) As Double = (0.0);
            Dim Layer(0, 0) As Integer = (0);
            Dim Direction(0, 0) As Double = (0.0);
            Dim debug(0, 0) As Boolean = (0);
            Dim commu_agt(0, 0) As AgtSet = ();
            Dim type(0, 0) As Integer = (0);
            Dim color(0, 0) As Integer = (0);
            Dim direct(0, 0) As Double = (0.0);
        }
        AgtType barrier(0, 0)[0] {
            Dim ID(0, 0) As Integer = (0);
            Dim X(0, 0) As Double = (0.0);
            Dim Y(0, 0) As Double = (0.0);
            Dim Layer(0, 0) As Integer = (0);
            Dim Direction(0, 0) As Double = (0.0);
        }
        Dim wall(0, 0)[160][300][1] As Integer = (48000*0);
        Dim fin(0, 0)[160][300][1] As Integer = (48000*0);
        AgtType phero(0, 0)[0] {
            Dim ID(0, 0) As Integer = (0);
            Dim X(0, 0) As Double = (0.0);
            Dim Y(0, 0) As Double = (0.0);
            Dim Layer(0, 0) As Integer = (0);
            Dim Direction(0, 0) As Double = (0.0);
            Dim time(0, 0) As Integer = (0);
        }
    }
    Dim num_robot(0, 0) As Integer = (0);
    Dim num_fin(0, 0) <1000>  As Integer = (0);
    Dim rubble(0, 0) As Boolean = (0);
}


//-------------------------------------------------------
// Agent Variable Initial Data
//-------------------------------------------------------
Initial_Value {
    UNIVERSE.NUM_ROBOT = 1(100);
    UNIVERSE.RUBBLE = 1(0);
}


//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE
Include "rubble.inc"

Univ_Init{
    dim i as integer
    dim j as integer
    dim one as Agt

    CreateAgtMulti(universe.map.robot,universe.num_robot)
    
    for i = 0 to GetWidthSpace(universe.map) -1
     for j = 0 to GetHeightSpace(universe.map) - 1
       if i==0 or j==0 or i ==GetWidthSpace(universe.map) -1 or j == GetHeightSpace(universe.map) - 1 then
         one = CreateAgt(universe.map.barrier)
         one.x = i
         one.y = j
       end if
     next j
    next i

	if universe.rubble then
		make_N_rubble(20,0.5)
		make_N_rubble(2,1)
	end if

}




Univ_Step_Begin{

}

Univ_Step_End{
	dim prefin as integer

	prefin = GetHistory(universe.num_fin,1000)

	if prefin == universe.num_fin then
		print("Num of Step is ")
		println(GetCountStep())
		print("Num of fin is ")
		println(prefin)
		println("")
		ExitSimulation()
	end if
}

Univ_Finish{
}
#end_rule UNIVERSE




//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE.MAP.ROBOT
Agt_Init{
   my.X = (rnd() * 4 - 2) + 5
   my.Y = (rnd() * 4 - 2) + 5
   my.Direction = rnd()*360
   my.direct = Rnd() * 360
   my.type = COLOR_RED
   my.color = COLOR_RED
}

Agt_Step{
  dim temp as AgtSet
  dim d as Double
  dim T as Double
  dim one as Agt
  dim black as AgtSet
  dim v(2) as Double
  dim count as Integer

	my.Direction = my.direct
	if GetCountStep() > 300 and (GetCountStep() mod 1000) > 100 then
		my.type = my.color
	else
		my.type = COLOR_RED
	end if
	v = Distribution()

	if v(0) == my.X and v(1) == My.Y then
		MakeOneAgtSetAroundOwn(temp,10,universe.map.barrier,false)
		if CountAgtSet(temp) != 0 and GetCountStep() > 300 and (GetCountStep() mod 1000) > 100 then // 壁見つけた
			my.direct = direct_black(temp)
		else //壁見つからない
			my.color = COLOR_CYAN
			MakeOneAgtSetAroundOwn(temp,10,universe.map.robot,false)
			for each one in temp
				if one.type == COLOR_BLACK then
					AddAgt(black,one)
				end if
			next one
			if	CountAgtSet(black) == 0 then //周りに壁沿いのやつがいなければ留まる
				MakeOneAgtSetAroundOwn(temp,10,universe.map.robot,false)
				for each one in temp
					if one.type == COLOR_BLUE then
						AddAgt(black,one)
					end if
  			next one
  			if CountAgtSet(black) == 0 then //フォローしてるやつもいないなら止まる
					Forward(-0.5)
				else	//いるならついていく
					my.direct = direct_blue(black,v)
				end if
			else //周りに黒がいれば
				my.direct = direct_blue(black,v)
			end if
		end if
	else
		my.color = COLOR_RED
		MakeOneAgtSetAroundOwn(temp,10,universe.map.robot,false)
		for each one in temp
			if one.type == COLOR_BLACK then
				AddAgt(black,one)
			end if
		next one
		if	CountAgtSet(black) == 0 then //壁伝いがいない
 			MakeOneAgtSetAroundOwn(temp,10,universe.map.robot,false)
			for each one in temp
				if one.type == COLOR_BLUE then
					AddAgt(black,one)
				end if
  		next one //ここまでで青を探してる
  		if CountAgtSet(black) == 0 then 
			  T = GetDirection(my.X,my.Y,v(0),v(1),universe.map)
				My.direct =  T + rnd() * 5
			else
				my.direct = direct_blue(black,v)
				
				my.color = COLOR_RED
			end if
		else
			my.direct = direct_blue(black,v)
		end if
  end if

  Forward(0.5)

	MakeOneAgtSetAroundPosition(temp,universe.map,my.X,my.Y,0,0.6,universe.map.barrier)
  if(CountAgtSet(temp) > 0) then
    Forward(-0.5)
    Turn(rnd()*60 - 120)
	else
	 draw_fin(my)
	end if
  MakeOneAgtSetAroundOwn(my.commu_agt,10,universe.map.robot,false)
}

function direct_blue(temp as AgtSet,v(2) as Double) as Double{
	dim T as Double
	dim direct as Double

	my.color = COLOR_BLUE
	T = 0
	for each one in temp
		T = T + one.Direction
	next one
	T = T / CountAgtSet(temp)
	direct = T

	return direct
}

function direct_black(temp as AgtSet) as Double{
	dim d as Integer
	dim direct as Double
	dim T as Double

	my.color = COLOR_BLACK
	d = 255
	T = 0
	for Each one in temp
		if MeasureDistance(one.X,one.Y,my.X,my.Y,universe.map) < d then
			d = MeasureDistance(one.X,one.Y,my.X,my.Y,universe.map)
			T = GetDirection(my.X,my.Y,one.X,one.Y,universe.map)
		end if
	next one
	direct = (T + 90 + 360 + Rnd() * 10) mod 360

	return direct
}



function Distribution() as Double{
	dim v(2) as Double
  dim temp as AgtSet
  dim neighbor as AgtSet
  dim alignment as AgtSet
  dim d as Double
  dim far as AgtSet
  dim T as Double
  dim one as Agt
  dim count as Integer

  v(0) = 0
  v(1) = 0
	MakeOneAgtSetAroundOwn(neighbor,4,universe.map.robot,false)
	MakeOneAgtSetAroundOwn(far,10,universe.map.robot,false)
	DelAgtSet(far,alignment)
	DelAgtSet(alignment,neighbor)

	if CountAgtSet(neighbor) > 0 then //近すぎる場合の斥力
	  for each one in neighbor
	    d = MeasureDistance(one.X,one.Y,my.X,my.Y,universe.map)/4
	    if d != 0 then
		  	v(0) = v(0) + (my.X - one.X)/(d^3)
		  	v(1) = v(1) + (my.Y - one.Y)/(d^3)
		  end if
	  next one
  end if

  MakeOneAgtSetAroundOwn(temp,1,universe.map.barrier,false)
  if CountAgtSet(temp) > 0 then //障害物からの斥力
	  for each one in temp
	    d = MeasureDistance(one.X,one.Y,my.X,my.Y,universe.map)
	    if d != 0 then
		  	v(0) = v(0) + 5 * (my.X - one.X)/(d^10) 
		  	v(1) = v(1) + 5 *  (my.Y - one.Y)/(d^10) 
		  end if
	  next one
  end if
  
  if CountAgtSet(far) > 0 then //遠い個体からの引力
  	for each one in neighbor
  		d = MeasureDistance(one.X,one.Y,my.X,my.Y,universe.map)/5
		  v(0) = v(0) + (one.X - my.X) * (d ^ 2)
	  	v(1) = v(1) + (one.Y - my.Y) * (d ^ 2)
	  next one
  end if


	v(0) = v(0) + my.X
	v(1) = v(1) + my.Y

	return v
}

sub draw_fin(one as agt){
	dim px as Integer
	dim py as Integer
	dim two as Agt
	dim temp as AgtSet

	 px = Int(one.X)
	 py = Int(one.Y)

	if px < GetWidthSpace(universe.map) and px >= 0 then
	if py < GetHeightSpace(universe.map)  and py >= 0 then
 	 if universe.map.fin(px,py,0) == 0 then
 		 universe.map.fin(px,py,0) = 1
 		 universe.num_fin = universe.num_fin + 1
   end if
  end if
  end if
}
#end_rule UNIVERSE.MAP.ROBOT




//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE.MAP.BARRIER
Agt_Init{

}

Agt_Step{

}
#end_rule UNIVERSE.MAP.BARRIER




//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE.MAP.PHERO
Agt_Init{
	My.time = 50
}

Agt_Step{
	if my.time == 0 then
		KillAgt(my)
	end if
	my.time = my.time -1
}
#end_rule UNIVERSE.MAP.PHERO




//-------------------------------------------------------
// Simulation Definition Division
//-------------------------------------------------------
Single_Simulation {
    Step_Max = 0;
    Time_Max = 0;
    End_Condition = "";
    Exec_Wait = 0;
    Exec_Wait_Max = 1000;
    Random_Generator = Java_Standard;
    Exec_Order = Random;
    Exec_Order_Random_First_Step_Only = No;
    Random_Seed = 0;
    Redraw_Timing = Step;
    Redraw_Interval = 1;
    Garbage_Interval = 0;
}


//-------------------------------------------------------
// Simulation Loop Definition Division
//-------------------------------------------------------
Repeat_Simulation {
    Value_Change = None;
    Initial_Value_Change_None {
        Repeat_Max = 10;
    }
}


//-------------------------------------------------------
// 2 Dimension Map Display Definition Division
//-------------------------------------------------------
Map_Output {
    Map_Space_Name = "Universe.map";
    Map_Name = "map";
    Title = "map";
    Disable = No;
    Background_Color = 255, 255, 255;
    Position_x = 0;
    Position_y = 287;
    Size_x = 752;
    Size_y = 623;
    Map_Cell_Size = 1;
    Remarks = Yes;
    Legend_Pos = Top;
    Font_Name = "Dialog";
    Font_Char_Set = 81;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 255, 255, 255;
    FastDraw = Yes;
    Draw_Timing = Simulation_Step;
    Draw_Interval = 1;
    Axis_Label = "", "";
    Draw_Range = 0, 0, 160, 300;
    Ruled_Line = No;
    Text_Display = No;
    Text_Display_Variable_Name = "";
    Chess_Type_Display_Position = Yes;
    Background_Transparent = No;
    Target_Layer = 0;
    Coordinate_Display = No;
    Space_Kind = Square_2D;
    BG_Pict = No;
    BG_Type = 0;
    BG_Var_Name = "";
    BG_File_Name = "";
    Origin_Position = 2;
    Output_Group_Name = "";
    Output {
        Map_Element_Name = "robot";
        Map_Element = Agent_Variable;
        Output_Expression = "Universe.map.robot";
        Draw_Line = No;
        Collection_Name = "";
        Line_Type = 0;
        Line_Arrow = 0;
        Line_Width = 0;
        Line_Color = 0, 0, 0;
        Line_Type_Variable = "";
        Line_Arrow_Variable = "";
        Line_Width_Variable = "";
        Line_Color_Variable = "";
        Agent_Color = "Universe.map.robot.type";
        Marker_Id = 1;
        Effective_Figures = 0;
        Format_Id = 0;
        Agent_Image_Direction = No;
        Icon_Type = 0;
        Icon_Var_Name = "";
        Icon_Transparent = No;
        Icon_Enlarg_Reduce = No;
        Icon_File_Name = "";
        Num_Display = No;
        Num_Var_Name = "";
        Agent_Image_Magnify_by_value = Yes;
        Agent_Image_Magnify_Value = 1.0;
        Agent_Image_Magnify_Variable_Name = "Universe.map.robot.ID";
        Agent_Image_Transparency_by_value = Yes;
        Agent_Image_Transparency_Value = 0.0;
        Agent_Image_Transparency_Variable_Name = "Universe.map.robot.ID";
    }
    Output {
        Map_Element_Name = "barrier";
        Map_Element = Agent_Variable;
        Output_Expression = "Universe.map.barrier";
        Draw_Line = No;
        Collection_Name = "";
        Line_Type = 0;
        Line_Arrow = 0;
        Line_Width = 0;
        Line_Color = 0, 0, 0;
        Line_Type_Variable = "";
        Line_Arrow_Variable = "";
        Line_Width_Variable = "";
        Line_Color_Variable = "";
        Agent_Color = 0,0,255;
        Marker_Id = 2;
        Effective_Figures = 0;
        Format_Id = 0;
        Agent_Image_Direction = No;
        Icon_Type = 0;
        Icon_Var_Name = "";
        Icon_Transparent = No;
        Icon_Enlarg_Reduce = No;
        Icon_File_Name = "";
        Num_Display = No;
        Num_Var_Name = "";
        Agent_Image_Magnify_by_value = Yes;
        Agent_Image_Magnify_Value = 1.0;
        Agent_Image_Magnify_Variable_Name = "Universe.map.barrier.ID";
        Agent_Image_Transparency_by_value = Yes;
        Agent_Image_Transparency_Value = 0.0;
        Agent_Image_Transparency_Variable_Name = "Universe.map.barrier.ID";
    }
    Output {
        Map_Element_Name = "fin";
        Map_Element = Space_Variable;
        Output_Expression = "Universe.map.fin";
        Space_Color_Direct_RGB = No;
        Space_Draw_Range = 0.0, 1.0;
        Space_Color_Min = 255, 255, 255;
        Space_Color_Max = 255, 255, 51;
        Marker_Id = 6;
        Icon_Type = 0;
        Icon_Var_Name = "";
        Icon_Transparent = No;
        Icon_Enlarg_Reduce = No;
        Icon_File_Name = "";
        Num_Display = No;
        Num_Var_Name = "";
        Space_Variable_Transparency_by_value = Yes;
        Space_Variable_Transparency_Value = 0.0;
        Space_Variable_Transparency_Variable_Name = "Universe.map.wall";
    }
    Output {
        Map_Element_Name = "commu";
        Map_Element = Agent_Variable;
        Output_Expression = "Universe.map.robot";
        Draw_Line = Yes;
        Collection_Name = "Universe.map.robot.commu_agt";
        Line_Type = 1;
        Line_Arrow = 1;
        Line_Width = 1;
        Line_Color = 51, 255, 0;
        Line_Type_Variable = "";
        Line_Arrow_Variable = "";
        Line_Width_Variable = "";
        Line_Color_Variable = "";
        Agent_Color = 255,0,0;
        Marker_Id = 1;
        Effective_Figures = 0;
        Format_Id = 0;
        Agent_Image_Direction = No;
        Icon_Type = 0;
        Icon_Var_Name = "";
        Icon_Transparent = No;
        Icon_Enlarg_Reduce = No;
        Icon_File_Name = "";
        Num_Display = No;
        Num_Var_Name = "";
        Agent_Image_Magnify_by_value = Yes;
        Agent_Image_Magnify_Value = 1.0;
        Agent_Image_Magnify_Variable_Name = "Universe.map.robot.ID";
        Agent_Image_Transparency_by_value = Yes;
        Agent_Image_Transparency_Value = 0.0;
        Agent_Image_Transparency_Variable_Name = "Universe.map.robot.ID";
    }
    Output {
        Map_Element_Name = "pheromon";
        Map_Element = Agent_Variable;
        Output_Expression = "Universe.map.phero";
        Draw_Line = No;
        Collection_Name = "";
        Line_Type = 0;
        Line_Arrow = 0;
        Line_Width = 0;
        Line_Color = 0, 0, 0;
        Line_Type_Variable = "";
        Line_Arrow_Variable = "";
        Line_Width_Variable = "";
        Line_Color_Variable = "";
        Agent_Color = 204,0,204;
        Marker_Id = 6;
        Effective_Figures = 0;
        Format_Id = 0;
        Agent_Image_Direction = No;
        Icon_Type = 0;
        Icon_Var_Name = "";
        Icon_Transparent = No;
        Icon_Enlarg_Reduce = No;
        Icon_File_Name = "";
        Num_Display = No;
        Num_Var_Name = "";
        Agent_Image_Magnify_by_value = Yes;
        Agent_Image_Magnify_Value = 1.0;
        Agent_Image_Magnify_Variable_Name = "Universe.map.phero.ID";
        Agent_Image_Transparency_by_value = Yes;
        Agent_Image_Transparency_Value = 0.0;
        Agent_Image_Transparency_Variable_Name = "Universe.map.phero.ID";
    }
}


//-------------------------------------------------------
// Time Graph Output Definition Division
//-------------------------------------------------------
Time_Graph {
    Font_Name = "Dialog";
    Font_Char_Set = 81;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 255, 255, 255;
    Draw_Timing = Simulation_Step;
    Draw_Interval = 1;
    Graph_Name = "num_fin";
    Title = "num_fin";
    Disable = No;
    Background_Color = 255, 255, 255;
    Remarks = Yes;
    Legend_Pos = Top;
    FastDraw = No;
    Position_x = 764;
    Position_y = 606;
    Size_x = 764;
    Size_y = 303;
    Map_Cell_Size = -1;
    Axis_Label = "", "";
    Draw_By_JFree_Chart = Yes;
    Scale = 0, 0.0, 1000, 100.0, 100, 10.0;
    ScaleAuto = Yes, Yes;
    Output_Group_Name = "";
    Output {
        Graph_Element_Name = "num_fin";
        Line_Color = 255, 0, 0;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "universe.num_fin";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (0, 255, 0);
    }
}


//-------------------------------------------------------
// Control Panel Definition Division
//-------------------------------------------------------
Control_Panel {
    Display_Area = 0, 0, 283, 113;
    Display_Type = 1;
    Panel_Item {
        Item_Type = Slider;
        Item_Name = "num_robot";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.num_robot";
        Slider_Range_Max = 100;
        Slider_Value_Min = 0.0;
        Slider_Value_Step = 1.0;
        Slider_Value = "100";
    }
    Panel_Item {
        Item_Type = Toggle;
        Item_Name = "rubble";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.rubble";
        Control_On = Yes;
        Control_On_Int = 0;
        Control_On_Long = 0;
        Control_On_Double = 0.0;
        Control_On_String = "";
        Control_Off = No;
        Control_Off_Int = 0;
        Control_Off_Long = 0;
        Control_Off_Double = 0.0;
        Control_Off_String = "";
        Toggle_Button_On = No;
        Slider_Range_Max = 100;
        Slider_Value_Min = 0.0;
        Slider_Value_Step = 1.0;
        Slider_Value = "100";
        Shortcut_Key = "";
    }
}


//-------------------------------------------------------
// Space Initial Value Definition Divsion
//-------------------------------------------------------
Space_Initial {
}


//-------------------------------------------------------
// Other Miscellaneous Data Definition Division
//-------------------------------------------------------
Others_Data {
    Indent = 4;
    Rule_Colored = Yes;
    Rule_LineNo = Yes;
    Window_Hide_Run = 1;
    Debug_Position_x = 509;
    Debug_Position_y = 303;
    Debug_Size_x = 509;
    Debug_Size_y = 303;
    Console_Position_x = 764;
    Console_Position_y = 303;
    Console_Size_x = 764;
    Console_Size_y = 303;
    Componen_Tree_Position_x = 217;
    Componen_Tree_Position_y = 440;
    Componen_Tree_Size_x = 764;
    Componen_Tree_Size_y = 303;
    Console_Background_Color = 16777215;
    Console_Foreground_Color = 255;
    Console_DisplayLines_Max = 500;
    plug_in_module_name = "";
    Font_Name = "Dialog";
    Font_Char_Set = 0;
    Font_Size = 14.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 0, 0, 0;
}


//-------------------------------------------------------
// Network Information Definition Division
//-------------------------------------------------------
Network_Info {
    Global_Space_Area = 0, 0, 100, 100;
    Local_Space_Info {
    }
}


//-------------------------------------------------------
// Space Map Initial Value Definition Division
//-------------------------------------------------------
Space_Map_Initial_Value {
    Space_Path_Name = Universe.map;
    Background_Image_File_Path_Name = "";
    Origin_Position = Left_Bottom;
    Space_Variable {
        Variable = Universe.map.wall,(201*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0
, 2*1, 198*0, 2*1, 198*0, 2*1, 198*0, 201*1, 8000*0);
        Marker_Id = 2;
        Min_Value = "0";
        Max_Value = "1";
        Min_Value_Color = 255, 255, 255;
        Max_Value_Color = 0, 255, 255;
    }
}


//-------------------------------------------------------
// Window Location Definition Division
//-------------------------------------------------------
Window_Rectangle {
    Window_Name = Main_Window, -8, -8, 1696, 1026;
    Window_Name = Output_Setting_Window, 623, 338, 480, 350;
    Window_Name = Artisoc_Help_Window, 10, 10, 400, 300;
}


//-------------------------------------------------------
// Help Favorite Division
//-------------------------------------------------------
Help_Favorite {
}
